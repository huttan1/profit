<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx</name>
    </assembly>
    <members>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address">
            <summary>
            Represent the address of a transaction for PayEx
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.#ctor(Litium.Foundation.Modules.ECommerce.Payments.PaymentInfo,Litium.Foundation.Modules.ECommerce.Deliveries.Delivery)">
            <summary>
            Constructs an instance of Address class. if delivery info is null, payment info address First name and Last name taken for mandatory parameters.
            </summary>
            <param name="paymentInfo">Payment Info.</param>
            <param name="delivery">Delivery Info.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.#ctor(Litium.Foundation.Modules.ECommerce.Addresses.Address,Litium.Foundation.Modules.ECommerce.Addresses.Address)">
            <summary>
            Constructs an object of Address.
            </summary>
            <param name="paymentAddress">Billing address.</param>
            <param name="deliveryAddress">Delivery address.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.Initialize(Litium.Foundation.Modules.ECommerce.Addresses.Address,Litium.Foundation.Modules.ECommerce.Addresses.Address)">
            <summary>
            Initialize the properties using payment and delivery addresses.
            </summary>
            <param name="paymentAddress">Payment address.</param>
            <param name="deliveryAddress">Delivery address.</param>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.BillingFirstName">
            <summary>
            Billing first name.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.BillingLastName">
            <summary>
            Biling last name.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.BillingAddress1">
            <summary>
            Billing address.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.BillingAddress2">
            <summary>
            Billing address.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.BillingAddress3">
            <summary>
            Billing address.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.BillingPostNumber">
            <summary>
            Billing Post code.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.BillingCity">
            <summary>
            Billing City.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.BillingState">
            <summary>
            Billing State.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.BillingCountry">
            <summary>
            Billing Country.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.BillingEmail">
            <summary>
            Billing Email.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.BillingPhone">
            <summary>
            Biling phone.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.BillingGsm">
            <summary>
            Billing Mobile phone.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.DeliveryFirstName">
            <summary>
            Delivery first name.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.DeliveryLastName">
            <summary>
            Delivery last name.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.DeliveryAddress1">
            <summary>
            Delivery address.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.DeliveryAddress2">
            <summary>
            Delivery address.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.DeliveryAddress3">
            <summary>
            Delivery address.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.DeliveryPostNumber">
            <summary>
            Delivery post number.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.DeliveryCity">
            <summary>
            Delivery City.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.DeliveryState">
            <summary>
            Delivery state.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.DeliveryCountry">
            <summary>
            Delivery country.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.DeliveryEmail">
            <summary>
            Delivery email.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.DeliveryPhone">
            <summary>
            Delivery phone.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address.DeliveryGsm">
            <summary>
            Delivery mobile phone.
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticatedWith3DSecureState">
            <summary>
            If authentication with 3D secure used, the state of the authentication
            </summary>
            <remarks> codes provided by payex</remarks>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticatedWith3DSecureState.None">
            <summary>
            No authetication found
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticatedWith3DSecureState.Y">
            <summary>
            3d-secure verification is OK.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticatedWith3DSecureState.N">
            <summary>
            3d-secure verification failed.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticatedWith3DSecureState.U">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticatedWith3DSecureState.A">
            <summary>
            3d-secure verification attempted, 
            PayEx consider the payment to be OK and forward the transaction to the bank with Y and A.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticatedWith3DSecureState.Undefined">
            <summary>
            Authentication state was not defined by Payex documentation
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticationState">
            <summary>
            Authentication status relating to 3D Secure transactions
            </summary>
            <remarks>
            ThreeDSecure is returned by Payex webmethods as 3DSecure, note when Enum.Parse will fail if directly used.
            </remarks>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticationState.None">
            <summary>
            No authentication status
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticationState.ThreeDSecure">
            <summary>
            3DSecure
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticationState.Undefined">
            <summary>
            state was not defined in original PayEx documentation
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExCompletePaymentArgs">
            <summary>
            Base class for arguments passed to <see cref="M:Litium.Foundation.Modules.ECommerce.Plugins.Interfaces.IPaymentProvider.CompletePayment(Litium.Foundation.Modules.ECommerce.Plugins.CompletePaymentArgs,Litium.Foundation.Security.SecurityToken)"/>
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExCompletePaymentResult">
            <summary>
            Result of the operation Complete Payment, <see cref="M:Litium.Foundation.Modules.ECommerce.Plugins.Interfaces.IPaymentProvider.CompletePayment(Litium.Foundation.Modules.ECommerce.Plugins.CompletePaymentArgs,Litium.Foundation.Security.SecurityToken)"/>
            </summary>    
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency">
            <summary>
            defined currencies by PayEx
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency.DKK">
            <summary>
            Danish Kroner
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency.EUR">
            <summary>
            European Union Euro
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency.FIN">
            <summary>
            Finnish Marks
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency.GBP">
            <summary>
            Sterlin Pounds
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency.NOK">
            <summary>
            Norwegian Kroner
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency.SEK">
            <summary>
            Swedish Kroner
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency.USD">
            <summary>
            US Dollar
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentResult">
            <summary>
            Result of ExecutePayment.
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentResult"/> class.
            </summary>
            <param name="redirectUrl">The redirect URL.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentResult"/> class.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentResult.RedirectUrl">
            <summary>
            Gets or sets the redirect URL.
            </summary>
            <value>The redirect URL.</value>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.HelperMethods">
            <summary>
            defines helper methods, not associated with any other class instance.
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.HelperMethods.GetMd5Hash(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            computes MD5 hash of input parameters
            </summary>
            <param name="accountNumber"> Mechant account no. at PayEx</param>
            <param name="purchaseOperation"> either SALE or AUTHORIZATION , </param>
            <param name="price">Total price including vat (if vat is supplied). Price must be submitted in the lowest monetary unit of the selected currency. Example: 1200 = 12.00 NOK</param>
            <param name="priceArgList">Comma separated field with name=value data for specifying prices for several payment methods. (Example: PX=2000,CPA=2500,VISA=5000,MC=5000)</param>
            <param name="currency">Currency code, one of: DKK | EUR | FIN | GBP | NOK | SEK | USD</param>
            <param name="vat">If the price given includes vat, this may be displayed for the user in the payment page (redirect only). The vat is in percent and must be submitted as vat amount * 100: Example: 2500 = 25.00 % </param>
            <param name="orderID">Order Id used by Ecommerce Module, used only for reference, empty value not permitted</param>
            <param name="productNumber"> Product number from product catelog, used only for reference</param>
            <param name="description"> Product description from product catelog, used only for reference</param>
            <param name="clientIPAddress"> IP address of machine running LitiumStudio Ecommerce web, this IP should be registered with PayEx</param>
            <param name="clientIdentifier"> Use the field to identify client specific session/browser information </param>
            <param name="externalID">Authorized merchants may create purchase links that include logon credentials. If the externalUserID is registered with PayEx, the user is authorized automatically, otherwise the user is offered an option to create this link. Set to String.Empty if you don’t require this functionality.</param>
            <param name="returnUrl">A string identifying the full URL for the page the user will be redirected to after a successful/cancelled purchase.(example: http://www.mysite.com/returnhandler.asp)</param>
            <param name="view">Default payment method. Available string constants: PX | CC | DD | PCSMS | CPA | IVR | EVC | INVOICE | LOAN </param>
            <param name="viewType">Differentiate between different payment pages in PayEx (re-direct model): 0=ordinary, 2=new Credit Card payment view.To use Css, merchant account nr has to be spesified</param>
            <param name="agreementRef">Specify the agreementRef (from PxAgreement.CreateAgreement2) to open for recurring payments. The following payments should be performed by using PxAgreement.Autopay. Set to blank if you don’t want this functionality. Note: The customer must be informed of recurring payments.</param>
            <param name="cancelUrl">A string identifying the full URL for the page the user will be redirected to when "the Cancel Purchase button" is pressed by the user. Set to blank if you don’t want this functionality</param>
            <param name="clientLanguage">The language used in the redirect purchase dialog with the client. Available languages depend on the merchant configuration. Supported languages: nb-NO,da-DK,en-US,sv-SE,es-ES,de-DE,fi-FI,fr-FR</param>
            <param name="encryptionKey">Encryption key provided by PayEx</param>
            <returns>Hex encoded hash string</returns>
            <remarks> <paramref name="clientIdentifier"/> can be used to identify session information. eg: USERAGENT=value1;key2=value2;key3=value3.</remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.HelperMethods.GetMd5Hash(System.String[],System.String)">
            <summary>
            returns Base16 encoded hash of the <paramref name="valuesToHash"/>.
            </summary>
            <param name="valuesToHash">set of values to compute the hash. the values are concatenated to a single string</param>
            <param name="encryptionKey">encryption security key provide by PayEx to be appended to the end of data string, before hashing</param>
            <returns>MD5 hash, hex encoded</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.HelperMethods.ConvertToReturnCode(System.String)">
            <summary>
            Converts the <paramref name="value"/> to a PayEx return code
            </summary>
            <param name="value"> string representation of return code, 
            this is the response received in typically ErrorCode in the Soap Response when we call payEx methods</param>
            <returns> <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode"/> if correct code found, else <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.None"/> if input string is null or empty, 
            or <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.UndefinedReturnCode"/> if return code was not defined by payex in thier documentation</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.HelperMethods.ConvertToTransactionState(System.String)">
            <summary>
             Converts the <paramref name="value"/> to a PayEx TransactionState
            </summary>
            <param name="value">Response received from payex web method, for example transactionStatus in pxOrder.Complete method return string.</param>
            <returns> <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.TransactionState"/> if correct code found, else <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.TransactionState.None"/> if input string is null or empty, 
            or <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.TransactionState.Undefined"/> if return code was not defined by payex in thier documentation</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.HelperMethods.ConvertToDateTime(System.String)">
            <summary>
            Converts the string into a <see cref="T:System.DateTime"/>
            </summary>
            <param name="value">string containing date representation</param>
            <returns>converted Date</returns>
            <exception cref="T:System.ApplicationException">
            exception thrown if dateTime format not valid or is null, explore "inner exception" for more details
            </exception>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.HelperMethods.ConvertToOrderStatus(System.String)">
            <summary>
             Converts the <paramref name="value"/> to a PayEx OrderStatus
            </summary>
            <param name="value">Response received from payex web method, for example orderStatus in pxOrder.Complete method return string.</param>
            <returns> <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.OrderStatus"/> if correct code found, else <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.OrderStatus.None"/> if input string is null or empty, 
            or <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.OrderStatus.Undefined"/> if return code was not defined by payex in thier documentation</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.HelperMethods.ConvertToAuthenticatedStatus(System.String)">
            <summary>
             Converts the <paramref name="value"/> to a PayEx AuthenticationState
            </summary>
            <param name="value">Response received from payex web method, for example authenticationState in pxOrder.Complete method return string.</param>
            <returns> <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticationState"/> if correct code found, else <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticationState.None"/> if input string is null or empty, 
            or <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticationState.Undefined"/> if return code was not defined by payex in thier documentation</returns>
            <remarks> PayEx returns string value 3DSecure as on authentication state which cannot be put directly in a enum, as it starts with a digit
            therefore, it is converted as <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticationState.ThreeDSecure"/></remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.HelperMethods.ConvertToAuthenticatedWith3DSecureState(System.String)">
            <summary>
             Converts the <paramref name="value"/> to a PayEx AuthenticatedWith3DSecureState
            </summary>
            <param name="value">Response received from payex web method, for example authenticatedWith in pxOrder.Complete method return string.</param>
            <returns> <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticatedWith3DSecureState"/> if correct code found, else <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticatedWith3DSecureState.None"/> if input string is null or empty or no authentication found, 
            or <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.AuthenticatedWith3DSecureState.Undefined"/> if return code was not defined by payex in thier documentation</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.HelperMethods.ConvertFromViewType(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ViewType)">
            <summary>
            Correctly convert the <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ViewType"/> to a int to be passed into PayEx web methods
            </summary>
            <param name="viewType"> ViewType to be converted to </param>
            <returns>int representation</returns>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice">
            <summary>
            Represents a PayEx invoice.
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.#ctor(Litium.Foundation.Modules.ECommerce.Payments.PaymentInfo,System.String,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.MediaDistribution)">
            <summary>
            Creates an instance of an Invoice.
            </summary>
            <param name="paymentInfo">Payment info which is used to initialize properties.</param>
            <param name="socialSecurityNumber">Social security number of customer.</param>
            <param name="mediaDistribution">Defines how invoice is distributed, paper, pdf or eNote.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.CreateInvoiceRows(Litium.Foundation.Modules.ECommerce.Payments.PaymentInfo)">
            <summary>
            Create invoice rows.
            </summary>
            <param name="paymentInfo">The payment info.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.CreateInvoiceRows(Litium.Foundation.Modules.ECommerce.Orders.Order,Litium.Foundation.Modules.ECommerce.Payments.PaymentInfo)">
            <summary>
            Create invoice rows.
            </summary>
            <param name="order">Order from which invoice rows are created.</param>
            <param name="paymentInfo">The payment info.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.ReconsileTotalAmounts(System.String,Litium.Foundation.Modules.ECommerce.Payments.PaymentInfo)">
            <summary>
            Match the invoice total to the payment info total to weed out the rounding off error.
            </summary>
            <param name="itemNo">The item no.</param>
            <param name="paymentInfo">The payment info.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.GetInvoiceDueDate(Litium.Foundation.Modules.ECommerce.Orders.Order)">
            <summary>
            Returns the invoice due date.
            </summary>
            <param name="order">Order to check.</param>
            <returns>Due date for Invoice.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.ToString">
            <summary>
            Returns a string representation of the object, in a suitable format to pass to PayEx Intialize function.
            </summary>
            <returns>String representation of the object.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.AppendQueryString(System.String,System.String)">
            <summary>
            Formats the parameters to a key value query string.
            </summary>
            <param name="key">Key.</param>
            <param name="value">Value. </param>
            <returns>string representation as in a query string</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.AppendQueryString(System.String,System.DateTime)">
            <summary>
            Formats the parameters to a key value query string.
            </summary>
            <param name="key">Key.</param>
            <param name="date">date formated to yyyy-mm-dd </param>
            <returns>string representation as in a query string</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.AppendQueryString(System.String,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.MediaDistribution)">
            <summary>
            Formats the parameters to a key value query string.
            </summary>
            <param name="key">Key.</param>
            <param name="mediaDistribution">Media distribution, value will be formated as an int.</param>
            <returns>string representation as in a query string</returns>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.InvoiceText">
            <summary>
            Invoice Text.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.MediaDistribution">
            <summary>
            Media distribution.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.CustomerId">
            <summary>
            Customer Id.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.DueDate">
            <summary>
            Invoice due date.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.Country">
            <summary>
            Country.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.SocialSecurityNumber">
            <summary>
            Social security number.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.FirstName">
            <summary>
            First name.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.FamilyName">
            <summary>
            Family name.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.PhoneNumber">
            <summary>
            Phone number.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.EMail">
            <summary>
            Email.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.InvoiceNumber">
            <summary>
            Invoice number,
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice.InvoiceRows">
            <summary>
            Invoice rows.
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow">
            <summary>
            Represent a payEx invoice row.
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.#ctor(Litium.Foundation.Modules.ECommerce.Orders.OrderRow)">
            <summary>
            Constructs a invoice row from the given order row.
            </summary>
            <param name="orderRow">Order row used to construct invoice row.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow"/> class.
            </summary>
            <param name="itemNumber">The item number.</param>
            <param name="description1">The description1.</param>
            <param name="description2">The description2.</param>
            <param name="quantity">The quantity. actual quantity, do not multiply by 100</param>
            <param name="amount">The amount. multiply by 100 to get lowest unit. eg: 105.50 SEK should be sent as 10550</param>
            <param name="vatPrice">The vat price.multiply by 100 to get lowest unit.  eg: 105.50 SEK should be sent as 10550</param>
            <param name="vatPercent">The vat percent.multiply by 100 to get lowest unit.  eg: 12.56% should be sent as 1256</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.#ctor(Litium.Foundation.Modules.ECommerce.Deliveries.Delivery)">
            <summary>
            Constructs a invoice row from the given order row.
            </summary>
            <param name="deliveryRow">The delivery row.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.#ctor(Litium.Foundation.Modules.ECommerce.Fees.Fee)">
            <summary>
            Constructs a invoice row from the given order row.
            </summary>
            <param name="feeRow">The fee row.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.#ctor(Litium.Foundation.Modules.ECommerce.Discounts.OrderDiscount)">
            <summary>
            Constructs a invoice row from the given order row.
            </summary>
            <param name="orderDiscount">The order discount.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.#ctor(Litium.Foundation.Modules.ECommerce.Orders.OrderCampaign)">
            <summary>
            Constructs a invoice row from the given order row.
            </summary>
            <param name="orderCampaign">The order campaign.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.#ctor(System.String,Litium.Foundation.Modules.ECommerce.Carriers.PaymentInfoRowCarrier)">
            <summary>
            Constructs a invoice row from the given paymentinfo row.
            </summary>
            <param name="itemNo">The item no.</param>
            <param name="paymentInfoRow">The order campaign.</param>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.ItemNumber">
            <summary>
            Item number
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.ItemDescription1">
            <summary>
            A description of the Item
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.ItemDescription2">
            <summary>
            A description of the Item
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.ItemDescription3">
            <summary>
            A description of the Item
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.ItemDescription4">
            <summary>
            A description of the Item
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.ItemDescription5">
            <summary>
            A description of the Item
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.Quantity">
            <summary>
             	Number of items 
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.Amount">
            <summary>
            Total amount including vat (if vat is supplied). 
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.VatPrice">
            <summary>
              	Vat price on this item. 
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.InvoiceRow.VatPercent">
            <summary>
            Vat percent for this item. With decimals, no delimither. Eg 100 = 1%. 
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.MediaDistribution">
            <summary>
            Defines how an Invoice will be distributed by PayEx.
            </summary>
            <remarks>Agreement required for ENote and pdf.</remarks>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.MediaDistribution.Paper">
            <summary>
            Paper.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.MediaDistribution.Pdf">
            <summary>
            PDF format.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.MediaDistribution.ENoteAndPaper">
            <summary>
            ENote and paper
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.MediaDistribution.ENote">
            <summary>
            Enote.
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.OrderStatus">
            <summary>
            Status of the order
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.OrderStatus.OrderCompleted">
            <summary>
            The order is completed (a purchase has been done, but check the transactionStatus to see the result).
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.OrderStatus.OrderIsProcessing">
            <summary>
            The order is processing. The customer has not started the purchase. 
            PxOrder.Complete will only return orderStatus 1 
            the first 4 hours after the PxOrder.Initialize is called. Afterwards the orderStatus will be set to 2 (No order or transaction is found)
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.OrderStatus.NoOrderOrTransactionFound">
            <summary>
            No order or transaction is found
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.OrderStatus.Undefined">
            <summary>
            OrderStatus was not defined in payex documentation
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.OrderStatus.None">
            <summary>
            OrderStatus was not specified
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentArgs">
            <summary>
            Arguments for Execute payment.
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentArgs.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentArgs"/> class.
            </summary>
            <param name="personNo">The person no.</param>
            <param name="responseURL">The URL response.</param>
            <param name="cancelURL">The URL cancel.</param>
            <param name="clientLanguage">The client language.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentArgs.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentArgs"/> class.
            </summary>
            <param name="personNo">The person no.</param>
            <param name="responseURL">The response URL.</param>
            <param name="cancelURL">The cancel URL.</param>
            <param name="clientLanguage">The client language.</param>
            <param name="userHostAddress">The user host address.</param>
            <param name="agreementRef">The agreement ref.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentArgs"/> class.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentArgs.ExecuteScript">
            <summary>
            Gets or sets the execute script that execute the payment provider script that post information to provider site.
            </summary>
            <value>The execute script.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentArgs.PersonNo">
            <summary>
            Gets or sets the person social security number.
            </summary>
            <value>The person no.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentArgs.ResponseUrl">
            <summary>
            Gets or sets the URL response.
            </summary>
            <value>The URL response.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentArgs.CancelUrl">
            <summary>
            Gets or sets the URL cancel.
            </summary>
            <value>The URL cancel.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentArgs.ClientLanguage">
            <summary>
            Gets or sets the client language.
            </summary>
            <value>The client language.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentArgs.AgreementRef">
            <summary>
            Gets or sets the agreement ref.
            </summary>
            <value>The agreement ref.</value>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentArgs.ExecuteScriptHandler">
            <summary>
            delegate to execute the payment provider script that post information to provider site, or redirect to provider site.
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder">
            <summary>
            Wraps the pxOrder web service
            </summary>
            <remarks>There are two ways of making a payment: 
            <para>1) single phase transactions</para>
            <para>2) Two phase transactions</para>
            <para> for a single phase transaction, call the <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation,System.Int32,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceArgList,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ViewType,System.String,System.String,System.String)"/> method passing <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation.SALE"/> as first parameter.
            Then, payex will call the <I>returnUrl</I>. then make a call to <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Complete(System.String)"/>  
            </para>
            <para>for two phase transaction,call the <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation,System.Int32,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceArgList,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ViewType,System.String,System.String,System.String)"/> method passing <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation.AUTHORIZATION"/> as first parameter. </para>
            Then, when payex call the <I>returnUrl</I>, either call <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Capture(System.Int32,System.Int32)"/> to commit the transaction or call
            <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Cancel(System.Int32)"/> to cancel the transaction
            </remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation,System.Int32,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceArgList,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ViewType,System.String,System.String,System.String)">
            <summary>
            Initialize the PayEx for a transaction. A transaction can be either single phased, meaning one time commit or two phased, meaning can commit or cancel at a later time.
            </summary>
            <param name="purchaseOperation">Use <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation.SALE"/> for one phased transactions, <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation.AUTHORIZATION"/> for two phased transactions</param>
            <param name="price">Total price including vat (if vat is supplied). Price must be submitted in the lowest monetary unit of the selected currency. Example: 1200 = 12.00 NOK</param>
            <param name="priceArgList">name=value data for specifying prices for several payment methods. (Example: PX=2000,CPA=2500,VISA=5000,MC=5000)</param>
            <param name="currency">currency code</param>
            <param name="vat">If the price given includes vat, this is the vat amount, this may be displayed for the user in the payment page (redirect only). The vat is in percent and must be submitted as vat amount * 100: Example: 2500 = 25.00 % </param>
            <param name="orderID">Order Id used by Ecommerce Module, used only for reference, empty value not permitted</param>
            <param name="productNumber"> Product number from product catelog, used only for reference</param>
            <param name="description"> Product description from product catelog, used only for reference</param>
            <param name="clientIdentifier"> Use the field to identify client specific session/browser information </param>
            <param name="externalID">Authorized merchants may create purchase links that include logon credentials. If the externalUserID is registered with PayEx, the user is authorized automatically, otherwise the user is offered an option to create this link. Set to String.Empty if you don’t require this functionality.</param>
            <param name="returnUrl">A string identifying the full URL for the page the user will be redirected to after a successful/cancelled purchase.(example: http://www.mysite.com/returnhandler.asp)</param>
            <param name="view">Default payment method. </param>
            <param name="viewType">Differentiate between different payment pages in PayEx (re-direct model)</param>
            <param name="agreementRef">Specify the agreementRef (from PxAgreement.CreateAgreement2) to open for recurring payments. The following payments should be performed by using PxAgreement.Autopay. Set to blank if you don’t want this functionality. Note: The customer must be informed of recurring payments.</param>
            <param name="cancelUrl">A string identifying the full URL for the page the user will be redirected to when "the Cancel Purchase button" is pressed by the user. Set to blank if you don’t want this functionality</param>
            <param name="clientLanguage">The language used in the redirect purchase dialog with the client. Available languages depend on the merchant configuration. Supported languages: nb-NO,da-DK,en-US,sv-SE,es-ES,de-DE,fi-FI,fr-FR</param>
            <returns>returns a new instance of <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response"/> which contains the return values from web method pxOrder.Initialize6</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation,System.Int32,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceArgList,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View,System.String,System.String,System.String)">
            <summary>
            This method is Obsolete, please use Initialize7 method with ClientIP address parameter.
            Initialize the PayEx for a transaction. A transaction can be either single phased, meaning one time commit or two phased, meaning can commit or cancel at a later time.
            </summary>
            <remarks>
            If AUTHORIZATION is submitted for perchase operation, this indicates that the order will be a 2-phased transaction if the payment method supports it. 
            For payment methods only supporting 1-phase transactions, this flag will be ignored.
            </remarks>
            <param name="purchaseOperation">Use <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation.SALE"/> for one phased transactions, <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation.AUTHORIZATION"/> for two phased transactions</param>
            <param name="price">Total price including vat (if vat is supplied). Price must be submitted in the lowest monetary unit of the selected currency. Example: 1200 = 12.00 NOK</param>
            <param name="priceArgList">name=value data for specifying prices for several payment methods. (Example: PX=2000,CPA=2500,VISA=5000,MC=5000)</param>
            <param name="currency">currency code</param>
            <param name="vat">If the price given includes vat, this is the vat amount, this may be displayed for the user in the payment page (redirect only). The vat is in percent and must be submitted as vat amount * 100: Example: 2500 = 25.00 % </param>
            <param name="orderID">Order Id used by Ecommerce Module, used only for reference, empty value not permitted</param>
            <param name="productNumber"> Product number from product catelog, used only for reference</param>
            <param name="description"> Product description from product catelog, used only for reference</param>
            <param name="clientIdentifier"> Use the field to identify client specific session/browser information </param>
            <param name="additionalValues"> Additional values. </param>
            <param name="externalID">Authorized merchants may create purchase links that include logon credentials. If the externalUserID is registered with PayEx, the user is authorized automatically, otherwise the user is offered an option to create this link. Set to String.Empty if you don’t require this functionality.</param>
            <param name="returnUrl">A string identifying the full URL for the page the user will be redirected to after a successful/cancelled purchase.(example: http://www.mysite.com/returnhandler.asp)</param>
            <param name="view">Default payment method. </param>
            <param name="agreementRef">Specify the agreementRef (from PxAgreement.CreateAgreement2) to open for recurring payments. The following payments should be performed by using PxAgreement.Autopay. Set to blank if you don’t want this functionality. Note: The customer must be informed of recurring payments.</param>
            <param name="cancelUrl">A string identifying the full URL for the page the user will be redirected to when "the Cancel Purchase button" is pressed by the user. Set to blank if you don’t want this functionality</param>
            <param name="clientLanguage">The language used in the redirect purchase dialog with the client. Available languages depend on the merchant configuration. Supported languages: nb-NO,da-DK,en-US,sv-SE,es-ES,de-DE,fi-FI,fr-FR</param>
            <returns>returns a new instance of <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response"/> which contains the return values from web method pxOrder.Initialize6</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation,System.Int32,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceArgList,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View,System.String,System.String,System.String)">
            <summary>
            Initialize the PayEx for a transaction. A transaction can be either single phased, meaning one time commit or two phased, meaning can commit or cancel at a later time.
            </summary>
            <param name="purchaseOperation">Use <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation.SALE"/> for one phased transactions, <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation.AUTHORIZATION"/> for two phased transactions</param>
            <param name="price">Total price including vat (if vat is supplied). Price must be submitted in the lowest monetary unit of the selected currency. Example: 1200 = 12.00 NOK</param>
            <param name="priceArgList">name=value data for specifying prices for several payment methods. (Example: PX=2000,CPA=2500,VISA=5000,MC=5000)</param>
            <param name="currency">currency code</param>
            <param name="vat">If the price given includes vat, this is the vat amount, this may be displayed for the user in the payment page (redirect only). The vat is in percent and must be submitted as vat amount * 100: Example: 2500 = 25.00 %</param>
            <param name="orderID">Order Id used by Ecommerce Module, used only for reference, empty value not permitted</param>
            <param name="productNumber">Product number from product catelog, used only for reference</param>
            <param name="description">Product description from product catelog, used only for reference</param>
            <param name="clientIP">The client IP.</param>
            <param name="clientIdentifier">Use the field to identify client specific session/browser information</param>
            <param name="additionalValues">Additional values.</param>
            <param name="externalID">Authorized merchants may create purchase links that include logon credentials. If the externalUserID is registered with PayEx, the user is authorized automatically, otherwise the user is offered an option to create this link. Set to String.Empty if you don’t require this functionality.</param>
            <param name="returnUrl">A string identifying the full URL for the page the user will be redirected to after a successful/cancelled purchase.(example: http://www.mysite.com/returnhandler.asp)</param>
            <param name="view">Default payment method.</param>
            <param name="agreementRef">Specify the agreementRef (from PxAgreement.CreateAgreement2) to open for recurring payments. The following payments should be performed by using PxAgreement.Autopay. Set to blank if you don’t want this functionality. Note: The customer must be informed of recurring payments.</param>
            <param name="cancelUrl">A string identifying the full URL for the page the user will be redirected to when "the Cancel Purchase button" is pressed by the user. Set to blank if you don’t want this functionality</param>
            <param name="clientLanguage">The language used in the redirect purchase dialog with the client. Available languages depend on the merchant configuration. Supported languages: nb-NO,da-DK,en-US,sv-SE,es-ES,de-DE,fi-FI,fr-FR</param>
            <returns>
            returns a new instance of <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response"/> which contains the return values from web method pxOrder.Initialize6
            </returns>
            <remarks>
            If AUTHORIZATION is submitted for perchase operation, this indicates that the order will be a 2-phased transaction if the payment method supports it.
            For payment methods only supporting 1-phase transactions, this flag will be ignored.
            </remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.GetClientLanguage(System.String)">
            <summary>
            Gets the client language.
            </summary>
            <param name="clientLanguage">The client language.</param>
            <returns>Client language if the client langauge is present in PayEx, otherwise string.Empty</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddOrderLines(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice,System.String)">
            <summary>
            Adds invoice rows to the order.
            </summary>
            <remarks>This method calls the pxOrder.AddSingleOrderLine in a loop for each Invoice row.
            <para>If atleast one web method call fails, method returns with the response of that web method call.</para>
            <para>Therefore, if the return response does not contain success, the invoice is not fully created.</para>
            </remarks>
            <param name="invoice">Invoice from which to add rows.</param>
            <param name="orderRef">Original order reference.</param>
            <returns>Response from the last executed AddSingleOrderLine web method.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddOrderAddress(System.String,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address)">
            <summary>
            Add order address to transaction.
            </summary>
            <param name="orderRef">Order reference.</param>
            <param name="address">Address.</param>
            <returns>Response returned as an object of AddOrderAddressResponse</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Complete(System.String)">
            <summary>
            Calls the pxOrder.Complete method
            </summary>
            <param name="orderRef">Order reference received when <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation,System.Int32,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceArgList,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ViewType,System.String,System.String,System.String)"/> is called </param>
            <returns> new instance of <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse"/> object, which contains information returned by PayEx</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Capture(System.String,System.Int32)">
            <summary>
            For a two phase commit, call this method after Initialize to charge the customer account. 
            </summary>
            <param name="transactionRef">transaction reference number</param>
            <param name="amount">The amount you wish to capture. Amount must be submitted in the  lowest monetary unit of the selected currency. Example: 1000 = 10.00 NOK</param>
            <returns>an instance of CaptureResponse object which contains information about the response received.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Capture(System.Int32,System.Int32)">
            <summary>
            For a two phase commit, call this method after Initialize to charge the customer account.
            </summary>
            <param name="transactionNo">The transaction no.</param>
            <param name="amount">The amount you wish to capture. Amount must be submitted in the  lowest monetary unit of the selected currency. Example: 1000 = 10.00 NOK</param>
            <returns>
            an instance of CaptureResponse object which contains information about the response received.
            </returns>
            <remarks>When calling <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation,System.Int32,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceArgList,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ViewType,System.String,System.String,System.String)"/>, "PurchaseOperation" parameter should be set to <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation.AUTHORIZATION"/> for a two phased commit.
            if you want to cancel, call <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Cancel(System.Int32)"/> without calling this method. </remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Credit(System.String,System.Int32)">
            <summary>
            Returns the money back to credit card of a previous transaction.
            </summary>
            <remarks>
            The credit functionality can behave differently based on the payment instrument 
            and/or if the financial institution accepts credit instructions (not all do). 
            Also note that some financial institutions don’t support partial credit before 24 hours have past.
            Please contact PayEx Support for more information
            </remarks>
            <param name="transactionRef">Transactin reference number</param>
            <param name="amount">Amount to be credited</param>
            <returns>object of CreditResponse which contains information about the response.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Credit(System.Int32,System.Int32)">
            <summary>
            Returns the money back to credit card of a previous transaction.
            </summary>
            <param name="transactionNo">The transaction no.</param>
            <param name="amount">Amount to be credited</param>
            <returns>
            object of CreditResponse which contains information about the response.
            </returns>
            <remarks>
            The credit functionality can behave differently based on the payment instrument
            and/or if the financial institution accepts credit instructions (not all do).
            Also note that some financial institutions don’t support partial credit before 24 hours have past.
            Please contact PayEx Support for more information
            </remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheck(System.String)">
            <summary>
            Check the transaction status
            </summary>
            <param name="transactionRef">The transaction ref.</param>
            <returns></returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheck(System.Int32)">
            <summary>
            Check the transaction status
            </summary>
            <param name="transactionNo">The transaction no.</param>
            <returns></returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Cancel(System.String)">
            <summary>
            This method is obsolete, please use Cancel(int) method
            call to cancel a transaction in two phased transaction method.
            </summary>
            <param name="transactionRef">A reference to the transaction you wish to cancel.</param>
            <returns>an instance of <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CancelResponse"/> class which contains the response recieved from pxCancel webmethod</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Cancel(System.Int32)">
            <summary>
            call to cancel a transaction in two phased transaction method.
            </summary>
            <param name="transactionNo">The transaction no.</param>
            <returns>
            an instance of <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CancelResponse"/> class which contains the response recieved from pxCancel webmethod
            </returns>
            <remarks>When calling <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation,System.Int32,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceArgList,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Currency,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ViewType,System.String,System.String,System.String)"/>, "PurchaseOperation" parameter should be set to <see cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation.AUTHORIZATION"/> for a two phased commit.
            if you want to cancel, call this method, if you want to commit call <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Capture(System.Int32,System.Int32)"/> without calling this method.
            </remarks>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response">
            <summary>
            provides a typed instance of reponse received from PxOrder.Initialize6 web method
            </summary>
            <remarks>
            the reponse provided by webmethod is a string, but the string contains xml itself
            Therefore, the Soap response cannot be directly interpreted
            </remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response.#ctor(System.String)">
            <summary>
            Creates a new instance with properties initialized with data contained in <paramref name="responseXml"/>
            </summary>
            <param name="responseXml"> Response returned when pxOrder.Initialize6 web method is called. this contains data to initialize class properties </param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response.Initialize">
            <summary>
            Initialize local variables
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response.op_Implicit(System.String)~Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response">
            <summary>
            implicit conversion of returned response from pxInitialize6 webmethod to Initialize6Response instance
            </summary>
            <param name="responseXml">returned response from pxInitialize6 webmethod</param>
            <returns>new instance of Initialize6Response class</returns>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response.Success">
            <summary>
            if true, operation succeeded
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response.OrderRef">
            <summary>
            This parameter is only returned if the parameter is successful, and returns a 32bit, hexadecimal value (Guid) identifying the orderRef.
            Example: 8e96e163291c45f7bc3ee998d3a89c39
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response.SessionRef">
             <summary>
             This parameter is only returned if the parameter is successful, and returns a 32bit, hexadecimal value (Guid) identifying the session for this order. This id is later used as a secret key when making a hash in the callback functionality.
             </summary>
             <remarks>
             Example: 8e96e163291c45f7bc3ee998d3a89c39
             Note:This field is only used if the merchant account is specifically configured to use the callback functionality. Otherwise there is no need to store the sessionRef.
            </remarks>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response.ErrorCode">
            <summary>
            A more informative error code which indicates the result of the request. 
            Returns OK if request is successful. 
            Note: This does NOT indicate wether the transaction requested was successful, only wether the Initialize request was carried out successfully.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response.StatusDescription">
            <summary>
             A literal description explaining the result. Returns OK if request is successful.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response.ParamName">
            <summary>
            Returns the name of the parameter that contains invalid data.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response.ThirdPartyError">
            <summary>
            Returns the error code received from third party (if returned).
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize6Response.RedirectUrl">
            <summary>
            Dynamic URL to send the end user to, when using redirect model. Note: This URL may change, do not store in any config file
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7Response">
            <summary>
            provides a typed instance of reponse received from PxOrder.Initialize7 web method
            </summary>
            <remarks>
            the reponse provided by webmethod is a string, but the string contains xml itself
            Therefore, the Soap response cannot be directly interpreted
            </remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7Response.#ctor(System.String)">
            <summary>
            Creates a new instance with properties initialized with data contained in <paramref name="responseXml"/>
            </summary>
            <param name="responseXml"> Response returned when pxOrder.Initialize7 web method is called. this contains data to initialize class properties </param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7Response.Initialize">
            <summary>
            Initialize local variables
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7Response.op_Implicit(System.String)~Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7Response">
            <summary>
            implicit conversion of returned response from pxInitialize7 webmethod to Initialize6Response instance
            </summary>
            <param name="responseXml">returned response from pxInitialize7 webmethod</param>
            <returns>new instance of Initialize6Response class</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7Response.ToString">
            <summary>
            Gives string representation of the object state.
            If Payment success, returns "PaymentStatus = Success"
            </summary>
            <returns>string representation of the object state</returns>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7Response.Success">
            <summary>
            if true, operation succeeded
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7Response.OrderRef">
            <summary>
            This parameter is only returned if the parameter is successful, and returns a 32bit, hexadecimal value (Guid) identifying the orderRef.
            Example: 8e96e163291c45f7bc3ee998d3a89c39
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7Response.SessionRef">
             <summary>
             This parameter is only returned if the parameter is successful, and returns a 32bit, hexadecimal value (Guid) identifying the session for this order. This id is later used as a secret key when making a hash in the callback functionality.
             </summary>
             <remarks>
             Example: 8e96e163291c45f7bc3ee998d3a89c39
             Note:This field is only used if the merchant account is specifically configured to use the callback functionality. Otherwise there is no need to store the sessionRef.
            </remarks>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7Response.ErrorCode">
            <summary>
            A more informative error code which indicates the result of the request. 
            Returns OK if request is successful. 
            Note: This does NOT indicate wether the transaction requested was successful, only wether the Initialize request was carried out successfully.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7Response.StatusDescription">
            <summary>
             A literal description explaining the result. Returns OK if request is successful.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7Response.ParamName">
            <summary>
            Returns the name of the parameter that contains invalid data.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7Response.ThirdPartyError">
            <summary>
            Returns the error code received from third party (if returned).
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.Initialize7Response.RedirectUrl">
            <summary>
            Dynamic URL to send the end user to, when using redirect model. Note: This URL may change, do not store in any config file
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse">
            <summary>
            Provides a typed instance of response received from PxOrder.Complete webMethod
            </summary>
            <remarks>
            the reponse provided by webmethod is a string, but the string contains xml itself
            Therefore, the Soap response cannot be directly interpreted
            </remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.#ctor(System.String)">
            <summary>
            Creates a new instance with properties initialized with data contained in <paramref name="responseXml"/>
            </summary>
            <param name="responseXml">Response returned when pxOrder.Complete web method is called. this contains data to initialize class properties</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.Initialize">
            <summary>
            Initialize local variables
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.op_Implicit(System.String)~Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse">
            <summary>
            implicit conversion of returned response from pxComplete webmethod to CompleteResponse instance
            </summary>
            <param name="responseXml">returned response from pxComplete webmethod</param>
            <returns>new instance of CompleteResponse class</returns>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.Success">
            <summary>
            if true, operation succeeded
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.ErrorCode">
            <summary>
            A more informative error code which indicates the result of the request. Returns OK if request is successful. Note: This does NOT indicate wether the transaction requested was successful, only wether the Complete request was carried out successfully
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.Description">
            <summary>
            A literal description explaining the result. Returns OK if request is successful.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.ParamName">
            <summary>
            Returns the name of the parameter that contains invalid data
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.ThirdPartyError">
            <summary>
            Returns the error code received from third party (if returned).
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.TransactionStatus">
            <summary>
            0=Sale, 1=Initialize, 2=Credit, 3=Authorize, 4=Cancel,5=Failure,6=Capture 
            (This field needs to be validated by the merchant to verify wether the transaction was successful or not).
            Successful transactions will contain 0 or 6. Please check both statuses.
            If PaymentMethod is credit card, and transactionStatus returns 5, you can find the error codes in section 3.5 (3.5.5 Credit Card Transaction error codes)
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.TransactionRef">
             <summary>
             This parameter returns a 32bit, hexadecimal value (Guid) identifying the transactionRef. 
             This parameter may not always be returned if the transaction failed at an early stage.
            Example: 8e96e163291c45f7bc3ee998d3a89c39
             </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.TransactionNumber">
            <summary>
            Returns the transaction number This is useful for support reference as this is the number 
            available in the merchant admin view and also the transaction number presented to the end user.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.OrderId">
            <summary>
            This returns the orderID supplied by the merchant when the order was created,
            enabling the merchant to link the return data from PayEx with their local orderID
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.ProductId">
            <summary>
             This returns the productNumber supplied by the merchant when the order was created, 
             enabling the merchant to link the return data from PayEx with their local orderID
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.ClientAccount">
            <summary>
            Returns the accountnumber of the debited user/client.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.PaymentMethod">
            <summary>
            Returns the payment method used to pay for this transaction (Payex, VISA, MC, etc).
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.Amount">
            <summary>
            Returns the amount credited the merchant The amount is returned in the lowest monetary unit of the selected currency. Example: 1000 = 10.00 NOK.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.StopDate">
            <summary>
             Returns the stopdate if the purchase is a subscription.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.ProductNumber">
            <summary>
            The Merchant product number/reference for this specific product. (Defined in PxOrder.Initialize)
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.TransactionFailedReason">
            <summary>
            Returns a description of why the transaction failed.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.OrderRefOrigin">
            <summary>
            The orderRef to the origin transaction
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.ClientGsmNumber">
            <summary>
            Returns the client's GSM number, if the paymentmethod is CPA. Else the parameter is blank.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.OrderStatus">
            <summary>
            Returns the Status of the order.
            0 = The order is completed (a purchase has been done, but check the transactionStatus to see the result).
            1 = The order is processing. The customer has not started the purchase. 
            PxOrder.Complete will only return orderStatus 1 the first 4 hours after the PxOrder.Initialize is called. 
            Afterwards the orderStatus will be set to 2
            2 = No order or transaction is found.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.AgreementRef">
            <summary>
            The agreementRef from CreateAgreement. Used on Autopay transactions.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.PaymentMethodExpireDate">
            <summary>
            Expire date on the current payment method. Ex. CC expire date
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.BankHash">
            <summary>
            Returns a hash of the credit card number
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.AuthenticatedStatus">
            <summary>
            Returns either "None" or "3DSecure" 
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.AuthenticatedWith">
            <summary>
            If authenticatedStatus returns "3DSecure", the following values is returned:
            Y = 3d-secure verification is OK.
            N = 3d-secure verification failed.
            U = Error.
            A = 3d-secure verification attempted, PayEx consider the payment to be OK and forward the transaction to the bank with Y and A. 
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.TransactionErrorCode">
            <summary>
            Returns a error code of why the transaction failed.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.TransactionErrorDescription">
            <summary>
            Returns a description of why the transaction failed.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CompleteResponse.TransactionThirdPartyError">
            <summary>
            Returns the thirdPartyError of why the transaction failed. 
            We recommend all merchants to log this error with your orders. This info is very useful when contacting our support team.
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CaptureResponse">
            <summary>
            Provides a typed instance of response received from PxOrder.Complete webMethod
            </summary>
            <remarks>
            the reponse provided by webmethod is a string, but the string contains xml itself
            Therefore, the Soap response cannot be directly interpreted
            </remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CaptureResponse.Initialize">
            <summary>
            Initialize local variables
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CaptureResponse.#ctor(System.String)">
            <summary>
            Creates a new instance with properties initialized with data contained in <paramref name="responseXml"/>
            </summary>
            <param name="responseXml">Response returned when pxOrder.Capture web method is called. this contains data to initialize class properties</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CaptureResponse.op_Implicit(System.String)~Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CaptureResponse">
            <summary>
            implicit conversion of returned response from pxCapture webmethod to CaptureResponse instance
            </summary>
            <param name="responseXml">returned response from pxCapture webmethod</param>
            <returns>new instance of CaptureResponse class</returns>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CaptureResponse.Success">
            <summary>
            if true, operation succeeded
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CaptureResponse.ErrorCode">
            <summary>
            A more informative error code which indicates the result of the request. Returns OK if request is successful. Note: This does NOT indicate wether the transaction requested was successful, only wether the Complete request was carried out successfully
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CaptureResponse.Description">
            <summary>
            A literal description explaining the result. Returns OK if request is successful.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CaptureResponse.ParamName">
            <summary>
            Returns the name of the parameter that contains invalid data
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CaptureResponse.ThirdPartyError">
            <summary>
            Returns the error code received from third party (if returned).
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CaptureResponse.TransactionStatus">
            <summary>
            0=Sale, 1=Initialize, 2=Credit, 3=Authorize, 4=Cancel,5=Failure,6=Capture 
            (This field needs to be validated by the merchant to verify wether the transaction was successful or not).
            Successful transactions will contain 0 or 6. Please check both statuses.
            If PaymentMethod is credit card, and transactionStatus returns 5, you can find the error codes in section 3.5 (3.5.5 Credit Card Transaction error codes)
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CaptureResponse.TransactionRef">
             <summary>
             This parameter returns a 32bit, hexadecimal value (Guid) identifying the transactionRef. 
             This parameter may not always be returned if the transaction failed at an early stage.
            Example: 8e96e163291c45f7bc3ee998d3a89c39
             </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CaptureResponse.TransactionNumber">
            <summary>
            Returns the transaction number This is useful for support reference as this is the number 
            available in the merchant admin view and also the transaction number presented to the end user.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CaptureResponse.OriginalTransactionNumber">
            <summary>
            Returns the transaction number of the original (Authorize) transaction. 
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CancelResponse">
            <summary>
            Provides a typed instance of response received from PxOrder.Ccancel webMethod
            </summary>
            <remarks>
            the reponse provided by webmethod is a string, but the string contains xml itself
            Therefore, the Soap response cannot be directly interpreted
            </remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CancelResponse.Initialize">
            <summary>
            Initialize local variables
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CancelResponse.#ctor(System.String)">
            <summary>
            Creates a new instance with properties initialized with data contained in <paramref name="responseXml"/>
            </summary>
            <param name="responseXml">Response returned when pxOrder.Cancel web method is called. this contains data to initialize class properties</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CancelResponse.op_Implicit(System.String)~Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CancelResponse">
            <summary>
            implicit conversion of returned response from pxCancel webmethod to CancelResponse instance
            </summary>
            <param name="responseXml">returned response from pxCancel webmethod</param>
            <returns>new instance of CancelResponse class</returns>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CancelResponse.Success">
            <summary>
            if true, operation succeeded
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CancelResponse.ErrorCode">
            <summary>
            A more informative error code which indicates the result of the request. Returns OK if request is successful. Note: This does NOT indicate wether the transaction requested was successful, only wether the Complete request was carried out successfully
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CancelResponse.Description">
            <summary>
            A literal description explaining the result. Returns OK if request is successful.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CancelResponse.ParamName">
            <summary>
            Returns the name of the parameter that contains invalid data
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CancelResponse.ThirdPartyError">
            <summary>
            Returns the error code received from third party (if returned).
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CancelResponse.TransactionStatus">
            <summary>
            0=Sale, 1=Initialize, 2=Credit, 3=Authorize, 4=Cancel,5=Failure,6=Capture 
            (This field needs to be validated by the merchant to verify wether the transaction was successful or not).
            Successful transactions will contain 0 or 6. Please check both statuses.
            If PaymentMethod is credit card, and transactionStatus returns 5, you can find the error codes in section 3.5 (3.5.5 Credit Card Transaction error codes)
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CancelResponse.TransactionRef">
             <summary>
             This parameter returns a 32bit, hexadecimal value (Guid) identifying the transactionRef. 
             This parameter may not always be returned if the transaction failed at an early stage.
            Example: 8e96e163291c45f7bc3ee998d3a89c39
             </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CancelResponse.TransactionNumber">
            <summary>
            Returns the transaction number This is useful for support reference as this is the number 
            available in the merchant admin view and also the transaction number presented to the end user.
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CreditResponse">
            <summary>
            Provides a typed instance of response received from PxOrder.Ccancel webMethod
            </summary>
            <remarks>
            the reponse provided by webmethod is a string, but the string contains xml itself
            Therefore, the Soap response cannot be directly interpreted
            </remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CreditResponse.Initialize">
            <summary>
            Initialize local variables
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CreditResponse.#ctor(System.String)">
            <summary>
            Creates a new instance with properties initialized with data contained in <paramref name="responseXml"/>
            </summary>
            <param name="responseXml">Response returned when pxOrder.Capture web method is called. this contains data to initialize class properties</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CreditResponse.op_Implicit(System.String)~Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CreditResponse">
            <summary>
            implicit conversion of returned response from pxCancel webmethod to CancelResponse instance
            </summary>
            <param name="responseXml">returned response from pxCancel webmethod</param>
            <returns>new instance of CancelResponse class</returns>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CreditResponse.Success">
            <summary>
            if true, operation succeeded
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CreditResponse.ErrorCode">
            <summary>
            A more informative error code which indicates the result of the request. Returns OK if request is successful. Note: This does NOT indicate wether the transaction requested was successful, only wether the Complete request was carried out successfully
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CreditResponse.Description">
            <summary>
            A literal description explaining the result. Returns OK if request is successful.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CreditResponse.ParamName">
            <summary>
            Returns the name of the parameter that contains invalid data
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CreditResponse.ThirdPartyError">
            <summary>
            Returns the error code received from third party (if returned).
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CreditResponse.TransactionStatus">
            <summary>
            0=Sale, 1=Initialize, 2=Credit, 3=Authorize, 4=Cancel,5=Failure,6=Capture 
            (This field needs to be validated by the merchant to verify wether the transaction was successful or not).
            Successful transactions will contain 0 or 6. Please check both statuses.
            If PaymentMethod is credit card, and transactionStatus returns 5, you can find the error codes in section 3.5 (3.5.5 Credit Card Transaction error codes)
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CreditResponse.TransactionRef">
             <summary>
             This parameter returns a 32bit, hexadecimal value (Guid) identifying the transactionRef. 
             This parameter may not always be returned if the transaction failed at an early stage.
            Example: 8e96e163291c45f7bc3ee998d3a89c39
             </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CreditResponse.TransactionNumber">
            <summary>
            Returns the transaction number This is useful for support reference as this is the number 
            available in the merchant admin view and also the transaction number presented to the end user.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.CreditResponse.OriginalTransactionNumber">
            <summary>
            Returns the transaction number of the original (Authorize/Sale) transaction.
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddSingleOrderLineResponse">
            <summary>
            Provides a typed instance of response received from PxOrder.AddSingleOrderLine webMethod
            </summary>
            <remarks>
            the reponse provided by webmethod is a string, but the string contains xml itself
            Therefore, the Soap response cannot be directly interpreted
            </remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddSingleOrderLineResponse.Initialize">
            <summary>
            Initialize local variables
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddSingleOrderLineResponse.#ctor(System.String)">
            <summary>
            Creates a new instance with properties initialized with data contained in <paramref name="responseXml"/>
            </summary>
            <param name="responseXml">Response returned when pxOrder.AddSingleOrderLine web method is called. this contains data to initialize class properties</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddSingleOrderLineResponse.op_Implicit(System.String)~Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddSingleOrderLineResponse">
            <summary>
            implicit conversion of returned response from pxAddSingleOrderLine webmethod to CancelResponse instance
            </summary>
            <param name="responseXml">returned response from pxAddSingleOrderLine webmethod</param>
            <returns>new instance of AddSingleOrderLine class</returns>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddSingleOrderLineResponse.Success">
            <summary>
            if true, operation succeeded
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddSingleOrderLineResponse.ErrorCode">
            <summary>
            A more informative error code which indicates the result of the request. Returns OK if request is successful. Note: This does NOT indicate wether the transaction requested was successful, only wether the Complete request was carried out successfully
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddSingleOrderLineResponse.Description">
            <summary>
            A literal description explaining the result. Returns OK if request is successful.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddSingleOrderLineResponse.ParamName">
            <summary>
            Returns the name of the parameter that contains invalid data
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddSingleOrderLineResponse.ThirdPartyError">
            <summary>
            Returns the error code received from third party (if returned).
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddOrderAddressResponse">
            <summary>
            Provides a typed instance of response received from PxOrder.AddAddress webMethod
            </summary>
            <remarks>
            the reponse provided by webmethod is a string, but the string contains xml itself
            Therefore, the Soap response cannot be directly interpreted
            </remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddOrderAddressResponse.Initialize">
            <summary>
            Initialize local variables
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddOrderAddressResponse.#ctor(System.String)">
            <summary>
            Creates a new instance with properties initialized with data contained in <paramref name="responseXml"/>
            </summary>
            <param name="responseXml">Response returned when pxOrder.AddOrderAddress web method is called. this contains data to initialize class properties</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddOrderAddressResponse.op_Implicit(System.String)~Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddOrderAddressResponse">
            <summary>
            implicit conversion of returned response from pxAddOrderAddress webmethod to Add an order address.
            </summary>
            <param name="responseXml">returned response from pxAddOrderAddress webmethod</param>
            <returns>new instance of AddOrderAddressResponse class</returns>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddOrderAddressResponse.Success">
            <summary>
            if true, operation succeeded
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddOrderAddressResponse.ErrorCode">
            <summary>
            A more informative error code which indicates the result of the request. Returns OK if request is successful. Note: This does NOT indicate wether the transaction requested was successful, only wether the Complete request was carried out successfully
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddOrderAddressResponse.Description">
            <summary>
            A literal description explaining the result. Returns OK if request is successful.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddOrderAddressResponse.ParamName">
            <summary>
            Returns the name of the parameter that contains invalid data
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.AddOrderAddressResponse.ThirdPartyError">
            <summary>
            Returns the error code received from third party (if returned).
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse">
            <summary>
            Provides a typed instance of response received from PxOrder.TransactionCheck webMethod
            </summary>
            <remarks>
            the reponse provided by webmethod is a string, but the string contains xml itself
            Therefore, the Soap response cannot be directly interpreted
            </remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.Initialize">
            <summary>
            Initialize local variables
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.#ctor(System.String)">
            <summary>
            Creates a new instance with properties initialized with data contained in <paramref name="responseXml"/>
            </summary>
            <param name="responseXml">Response returned when pxOrder.Cancel web method is called. this contains data to initialize class properties</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.op_Implicit(System.String)~Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse">
            <summary>
            implicit conversion of returned response from pxTransactionCheck webmethod to TransactionCheckResponse instance
            </summary>
            <param name="responseXml">returned response from pxTransactionCheck webmethod</param>
            <returns>new instance of TransactionCheckResponse class</returns>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.Success">
            <summary>
            if true, operation succeeded
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.ErrorCode">
            <summary>
            A more informative error code which indicates the result of the request. Returns OK if request is successful. Note: This does NOT indicate wether the transaction requested was successful, only wether the Complete request was carried out successfully
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.Description">
            <summary>
            A literal description explaining the result. Returns OK if request is successful.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.ParamName">
            <summary>
            Returns the name of the parameter that contains invalid data
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.ThirdPartyError">
            <summary>
            Returns the error code received from third party (if returned).
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.TransactionStatus">
            <summary>
            0=Sale, 1=Initialize, 2=Credit, 3=Authorize, 4=Cancel,5=Failure,6=Capture 
            (This field needs to be validated by the merchant to verify wether the transaction was successful or not).
            Successful transactions will contain 0 or 6. Please check both statuses.
            If PaymentMethod is credit card, and transactionStatus returns 5, you can find the error codes in section 3.5 (3.5.5 Credit Card Transaction error codes)
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.TransactionRef">
             <summary>
             This parameter returns a 32bit, hexadecimal value (Guid) identifying the transactionRef. 
             This parameter may not always be returned if the transaction failed at an early stage.
            Example: 8e96e163291c45f7bc3ee998d3a89c39
             </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.TransactionNumber">
            <summary>
            Returns the transaction number This is useful for support reference as this is the number 
            available in the merchant admin view and also the transaction number presented to the end user.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.DebitAmount">
            <summary>
            Gets or sets the debit amont.
            </summary>
            <value>The debit amont.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.DebitCurrency">
            <summary>
            Gets or sets the debit currency.
            </summary>
            <value>The debit currency.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.DebitAccountNumber">
            <summary>
            Gets or sets the debit account number.
            </summary>
            <value>The debit account number.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.CreditAmount">
            <summary>
            Gets or sets the credit amount.
            </summary>
            <value>The credit amount.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.CreditCurrency">
            <summary>
            Gets or sets the credit currency.
            </summary>
            <value>The credit currency.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.CreditAccountNumber">
            <summary>
            Gets or sets the credit account number.
            </summary>
            <value>The credit account number.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.OrderId">
            <summary>
            Gets or sets the order id.
            </summary>
            <value>The order id.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.ProductId">
            <summary>
            Gets or sets the product id.
            </summary>
            <value>The product id.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.OrderDescription">
            <summary>
            Gets or sets the order description.
            </summary>
            <value>The order description.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.PaymentMethod">
            <summary>
            Gets or sets the payment method.
            </summary>
            <value>The payment method.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExOrder.TransactionCheckResponse.OrderCreated">
            <summary>
            Gets or sets the order created.
            </summary>
            <value>The order created.</value>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider">
            <summary>
            Implementation of the Payment Provider functionality
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ChargeCustomerAccount(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)">
            <summary>
            Starts a transaction, initializing the provider to charge the customer account directly.
            Note: After you redirect to <paramref name="redirectUrl"/>, this transaction cannot be cancelled, if customer approves it in payment provider page.
            If you want ability to cancel transaction
            use <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ReserveMoneyFromCustomerAccount(System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)"/>
            </summary>
            <param name="paymentMethod">Payment method to use. Should be one of the keys returned in <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetPaymentMethods"/></param>
            <param name="urlSuccess">Url to call if successful.</param>
            <param name="urlCancel">Url to call if cancelled by user.</param>
            <param name="clientLanguage">The language used in the redirect purchase dialog with the client. Available languages depend on the merchant configuration. Supported languages: nb-NO,da-DK,en-US,sv-SE,es-ES,de-DE,fi-FI,fr-FR</param>
            <param name="clientIP">The client ip.</param>
            <param name="clientIdentifier">The client identifier.</param>
            <param name="agreementRef">The agreement ref.</param>
            <param name="redirectUrl">Redirect to this url for payment provider to collect credit card information.</param>
            <param name="token">Security token.</param>
            <returns>True if successful, False if failed.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ChargeCustomerAccount(System.String,System.String,System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)">
            <summary>
            Starts a transaction, initializing the provider to charge the customer account directly.
            Note: After you redirect to <paramref name="redirectUrl"/>, this transaction cannot be cancelled, if customer approves it in payment provider page.
            If you want ability to cancel transaction
            use <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ReserveMoneyFromCustomerAccount(System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)"/>
            </summary>
            <param name="paymentMethod">Payment method to use. Should be one of the keys returned in <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetPaymentMethods"/></param>
            <param name="urlSuccess">Url to call if successful.</param>
            <param name="urlCancel">Url to call if cancelled by user.</param>
            <param name="clientLanguage">The language used in the redirect purchase dialog with the client. Available languages depend on the merchant configuration. Supported languages: nb-NO,da-DK,en-US,sv-SE,es-ES,de-DE,fi-FI,fr-FR</param>
            <param name="clientIdentifier">The client identifier.</param>
            <param name="agreementRef">The agreement ref.</param>
            <param name="redirectUrl">Redirect to this url for payment provider to collect credit card information.</param>
            <param name="token">Security token.</param>
            <returns>True if successful, False if failed.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ChargeCustomerAccount(System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)">
            <summary>
            This method is obsolete. Please use a non-obsolete overload of this method.
            Starts a transaction, initializing the provider to charge the customer account directly.
            Note: After you redirect to <paramref name="redirectUrl"/>, this transaction cannot be cancelled, if customer approves it in payment provider page.
            If you want ability to cancel transaction
            use "ReserveMoneyFromCustomerAccount(string paymentMethod, string urlSuccess, string urlCancel, string clientLanguage, string clientIdentifier, string agreementRef, ref string redirectUrl, SecurityToken token)"
            </summary>
            <param name="paymentMethod">Payment method to use. Should be one of the keys returned in <see cref="M:Litium.Foundation.Modules.ECommerce.Plugins.Interfaces.IPaymentProvider.GetPaymentMethods"/></param>
            <param name="urlSuccess">Url to call if successful.</param>
            <param name="urlCancel">Url to call if cancelled by user.</param>
            <param name="clientLanguage">The language used in the redirect purchase dialog with the client. Available languages depend on the merchant configuration. Supported languages: nb-NO,da-DK,en-US,sv-SE,es-ES,de-DE,fi-FI,fr-FR</param>
            <param name="redirectUrl">Redirect to this url for payment provider to collect credit card information.</param>
            <param name="token">Security token.</param>
            <returns>True if successful, False if failed.</returns>
            <exception cref="T:Litium.Foundation.Modules.ECommerce.Plugins.PaymentProviderException">Thrown when API generates an error.</exception>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ChargeCustomerAccount(System.Int16,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)">
            <summary>
            This method is obsolete. Please use a non-obsolete overload of this method.
            Starts a transaction, initializing the provider to charge the customer account directly.
            Note: After you redirect to <paramref name="redirectUrl"/>, this transaction cannot be cancelled, if customer approves it in payment provider page.
            If you want ability to cancel transaction
            use <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ReserveMoneyFromCustomerAccount(System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)"/>
            </summary>
            <param name="paymentMethod">Payment method to use. Should be one of the keys returned in <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetPaymentMethods"/></param>
            <param name="urlSuccess">Url to call if successful.</param>
            <param name="urlCancel">Url to call if cancelled by user.</param>
            <param name="clientLanguage">The language used in the redirect purchase dialog with the client. Available languages depend on the merchant configuration. Supported languages: nb-NO,da-DK,en-US,sv-SE,es-ES,de-DE,fi-FI,fr-FR</param>
            <param name="redirectUrl">Redirect to this url for payment provider to collect credit card information.</param>
            <param name="token">Security token.</param>
            <returns>True if successful, False if failed.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ReserveMoneyFromCustomerAccount(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)">
            <summary>
            Starts a transaction by initializing the payment provider to only reserve money from customer.
            Call <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CompleteTransaction(Litium.Foundation.Security.SecurityToken)"/> or <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CancelTransaction(Litium.Foundation.Security.SecurityToken)"/> if you have called this method
            to either take money from customer or to cancel the transaction.
            </summary>
            <param name="paymentMethod">Payment method to use. Should be one of the keys returned in <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetPaymentMethods"/></param>
            <param name="urlSuccess">Url to call if successful.</param>
            <param name="urlCancel">Url to call if cancelled by user.</param>
            <param name="clientLanguage">The language used in the redirect purchase dialog with the client. Available languages depend on the merchant configuration. Supported languages: nb-NO,da-DK,en-US,sv-SE,es-ES,de-DE,fi-FI,fr-FR</param>
            <param name="clientIP">The client ip.</param>
            <param name="clientIdentifier">The client identifier. Usually the IP address of the client.</param>
            <param name="agreementRef">The agreement ref. in multipart payments.</param>
            <param name="redirectUrl">Redirect to this url for payment provider to collect credit card information.</param>
            <param name="token">Security token.</param>
            <returns>True if successful, False if failed.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ReserveMoneyFromCustomerAccount(System.String,System.String,System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)">
            <summary>
            This method is obsolete. Please use a non-obsolete overload of this method.
            Starts a transaction by initializing the payment provider to only reserve money from customer.
            Call <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CompleteTransaction(Litium.Foundation.Security.SecurityToken)"/> or <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CancelTransaction(Litium.Foundation.Security.SecurityToken)"/> if you have called this method
            to either take money from customer or to cancel the transaction.
            </summary>
            <param name="paymentMethod">Payment method to use. Should be one of the keys returned in <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetPaymentMethods"/></param>
            <param name="urlSuccess">Url to call if successful.</param>
            <param name="urlCancel">Url to call if cancelled by user.</param>
            <param name="clientLanguage">The language used in the redirect purchase dialog with the client. Available languages depend on the merchant configuration. Supported languages: nb-NO,da-DK,en-US,sv-SE,es-ES,de-DE,fi-FI,fr-FR</param>
            <param name="clientIdentifier">The client identifier. Usually the IP address of the client.</param>
            <param name="agreementRef">The agreement ref. in multipart payments.</param>
            <param name="redirectUrl">Redirect to this url for payment provider to collect credit card information.</param>
            <param name="token">Security token.</param>
            <returns>True if successful, False if failed.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ReserveMoneyFromCustomerAccount(System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)">
            <summary>
            This method is obsolete. Please use a non-obsolete overload of this method.
            Starts a transaction by initializing the payment provider to only reserve money from customer.
            Call <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CompleteTransaction(Litium.Foundation.Security.SecurityToken)"/> or <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CancelTransaction(Litium.Foundation.Security.SecurityToken)"/> if you have called this method
            to either take money from customer or to cancel the transaction.
            </summary>
            <param name="paymentMethod">Payment method to use. Should be one of the keys returned in <see cref="M:Litium.Foundation.Modules.ECommerce.Plugins.Interfaces.IPaymentProvider.GetPaymentMethods"/></param>
            <param name="urlSuccess">Url to call if successful.</param>
            <param name="urlCancel">Url to call if cancelled by user.</param>
            <param name="clientLanguage">The language used in the redirect purchase dialog with the client. Available languages depend on the merchant configuration. Supported languages: nb-NO,da-DK,en-US,sv-SE,es-ES,de-DE,fi-FI,fr-FR</param>
            <param name="redirectUrl">Redirect to this url for payment provider to collect credit card information.</param>
            <param name="token">Security token.</param>
            <returns>True if successful, False if failed.</returns>
            <exception cref="T:Litium.Foundation.Modules.ECommerce.Plugins.PaymentProviderException">Thrown when API generates an error.</exception>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ReserveMoneyFromCustomerAccount(System.Int16,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)">
            <summary>
            Starts a transaction by initializing the payment provider to only reserve money from customer.
            Call <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CompleteTransaction(Litium.Foundation.Security.SecurityToken)"/> or <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CancelTransaction(Litium.Foundation.Security.SecurityToken)"/> if you have called this method
            to either take money from customer or to cancel the transaction.
            </summary>
            <param name="paymentMethod">Payment method to use. Should be one of the keys returned in <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetPaymentMethods"/></param>
            <param name="urlSuccess">Url to call if successful.</param>
            <param name="urlCancel">Url to call if cancelled by user.</param>
            <param name="clientLanguage">The language used in the redirect purchase dialog with the client. Available languages depend on the merchant configuration. Supported languages: nb-NO,da-DK,en-US,sv-SE,es-ES,de-DE,fi-FI,fr-FR</param>
            <param name="redirectUrl">Redirect to this url for payment provider to collect credit card information.</param>
            <param name="token">Security token.</param>
            <returns>True if successful, False if failed.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CompleteTransaction(Litium.Foundation.Security.SecurityToken)">
            <summary>
            Completes a transaction.
            </summary>
            <param name="token">Security token.</param>
            <returns>True if successful, False otherwise.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CancelTransaction(Litium.Foundation.Security.SecurityToken)">
            <summary>
            Cancels a transaction started by <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ReserveMoneyFromCustomerAccount(System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)"/>
            </summary>
            <param name="token">Security token.</param>
            <returns>True if successful, False otherwise.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ReturnPayment(Litium.Foundation.Security.SecurityToken)">
            <summary>
            Returns payments back to the user.
            </summary>
            <remarks>values which are fractions of a base currency, like Öre/cents are not returned.</remarks>
            <param name="token">Security token.</param>
            <returns>True if successful, False otherwise.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ReturnPayment(Litium.Foundation.Modules.ECommerce.Plugins.ReturnPaymentArgs,Litium.Foundation.Security.SecurityToken)">
            <summary>
            Returns payments back to the user.
            </summary>
            <param name="args">The args.</param>
            <param name="token">Security token.</param>
            <returns>True if successful, False otherwise.</returns>
            <remarks>Please see remarks under <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ExecutePayment(Litium.Foundation.Modules.ECommerce.Plugins.ExecutePaymentArgs,Litium.Foundation.Security.SecurityToken)"/></remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetPaymentMethods">
            <summary>
            Gets a list of Payment methods. Dictionary contains the keys to use in <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ReserveMoneyFromCustomerAccount(System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)"/> or in
            <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ChargeCustomerAccount(System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)"/> methods.
            </summary>
            <returns>Dictionary of key value pairs containing payment method Id, and payment method description.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetPaymentMethodsSupported">
            <summary>
            Gets a list of Payment methods.
            </summary>
            <returns>List of payment method description.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetPaymentMethodsSupported(Litium.Foundation.Modules.ECommerce.Plugins.ExecutePaymentMode)">
            <summary>
            Gets the list of payment methods supported, for the given execute payment mode.
            Note that, some payment providers does not support all the payment methods for reserve mode.
            </summary>
            <param name="paymentMode">The payment mode.</param>
            <returns>List of supported payment methods.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ProviderRedirectedToUrlSuccess(Litium.Foundation.Security.SecurityToken)">
            <summary>
            The payment provider redirected to the urlSuccess specified in <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ReserveMoneyFromCustomerAccount(System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)"/> or 
            <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ChargeCustomerAccount(System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)"/>
            </summary>
            <param name="token">Security token.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ProviderRedirectedToUrlCancel(Litium.Foundation.Security.SecurityToken)">
            <summary>
            The payment provider redirected to the urlCancel specified in <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ReserveMoneyFromCustomerAccount(System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)"/> or 
            <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ChargeCustomerAccount(System.String,System.String,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)"/>
            </summary>
            <param name="token">Security token.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CancelPayment(Litium.Foundation.Modules.ECommerce.Plugins.CancelPaymentArgs,Litium.Foundation.Security.SecurityToken)">
            <summary>
            Cancels a current Payment. This is only possible in certain scenarios.
            </summary>
            <param name="args">The args.</param>
            <param name="token">Security Token.</param>
            <returns>True if successful, False otherwise.</returns>
            <remarks>Please see remarks under <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ExecutePayment(Litium.Foundation.Modules.ECommerce.Plugins.ExecutePaymentArgs,Litium.Foundation.Security.SecurityToken)"/></remarks>
            <exception cref="T:Litium.Foundation.Modules.ECommerce.Plugins.PaymentProviderException">Thrown when API generates an error.</exception>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.TestInitialize6(System.String@,System.String@)">
            <summary>
            Test initializer
            </summary>
            <param name="redirectUrl">Redirect URL.</param>
            <param name="orderRef">Order ref.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.TestComplete(System.String)">
            <summary>
            Test complete.
            </summary>
            <param name="orderRef">Order ref.</param>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ExecutePayment(Litium.Foundation.Modules.ECommerce.Plugins.ExecutePaymentArgs,Litium.Foundation.Security.SecurityToken)">
            <summary>
            Executes the payment.
            </summary>
            <param name="args">The args.</param>
            <param name="token">The token.</param>
            <returns>Results of executing payment.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CompletePayment(Litium.Foundation.Modules.ECommerce.Plugins.CompletePaymentArgs,Litium.Foundation.Security.SecurityToken)">
            <summary>
            Completes the payment.
            </summary>
            <param name="args">The args.</param>
            <param name="token">The token.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.OnProviderCallback(System.Collections.Specialized.NameValueCollection,System.Boolean,Litium.Foundation.Security.SecurityToken)">
            <summary>
            Method to execute when the Payment provider redirects back into Litium studio after a call to it.
            </summary>
            <param name="queryString">The query string.</param>
            <param name="isSuccess">if the Payment provider result redirected to success, this is true, else false.</param>
            <param name="token">The token.</param>
            <remarks>
            After calling any of the methods on the payment providers external API,
            usually over a web service, over a HTTP post, remote procedure call or a similar method,
            the payment provider will redirect the execution control back into Litium Studio.
            <para>The execution control is given back by the provider by redirecting back to a Litium Studio page
            or a entry port such as a webhandler, in most cases. </para>
            	<para>Usually, this redirect location is given to the payment provider when calling the <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.ExecutePayment(Litium.Foundation.Modules.ECommerce.Plugins.ExecutePaymentArgs,Litium.Foundation.Security.SecurityToken)"/> method.</para>
            	<para>After getting the execution control back, this method should be called, irrespective of the result of the execution.</para>
            	<para>In the implementation of this method, any post call back scenarios specific to payment provider should be handled.</para>
            </remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.SyncPaymentStatusWithProvider(Litium.Foundation.Security.SecurityToken)">
            <summary>
            Syncs the payment status with provider.
            </summary>
            <param name="token">The token.</param>
            <remarks>On occations where communication line failures or other errors occur during communication with
            payment provider, the payment status in Litium Studio may remain behind the internal status of the transaction
            in payment provider.
            <para>
            For example, suppose a ExecutePayment is called, which will put the payment status to InitiatedDirectPayment,
            but lets say the control does not return at all. The Payment status may remain at InitiatedDirectPayment
            when viewed from Litium Studio. But at the payment providers end, this status can be Failed, Reserved, Paid, etc.        ///
            </para>
            	<para>This method should try to see whether a transaction exists in the target payment provider system,
            and if it exists find out its status and adjust the Payment status accordingly.</para>
            </remarks>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.UsePartialPayments">
            <summary>
            Use the partial payments.,
            PayEx only supports partial payments only, its credit cards, and executePaymentMode is Reserve.
            There should also be more than one paymentInfo created during checkout flow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.InitializePartialPayments(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExExecutePaymentArgs,System.String,System.String,System.String@,Litium.Foundation.Security.SecurityToken)">
            <summary>
            Initializes the part payments. PayEx part payments work, only with reserve mode, with credit cards.
            All paymentinfo objects which satisfy partpayment criterial will be initialized at once.
            </summary>
            <param name="args">The args.</param>
            <param name="responseURL">The response URL.</param>
            <param name="cancelURL">The cancel URL.</param>
            <param name="redirectUrl">The redirect URL.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetPartialPaymentDescription">
            <summary>
            Gets the partial payment description.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetPartialPaymentInfos(Litium.Foundation.Modules.ECommerce.Orders.Order)">
            <summary>
            Gets the partial payment infos.
            payex only supports partial payments on credit cards as at now.
            </summary>
            <param name="order">The order.</param>
            <returns></returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetAdditionalValues(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View,System.String,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.MediaDistribution,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice@)">
            <summary>
            Gets the additional info values.
            </summary>
            <param name="paymentMethod">The payment method.</param>
            <param name="socialSecurityNumber">The social security number.</param>
            <param name="mediaDistribution">The media distribution.</param>
            <param name="invoice">The invoice.</param>
            <returns></returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetProductNumber">
            <summary>
            Gets the product number to be displayed in invoice. 
            If more than one products, a comma seperated list is emited.
            </summary>
            <returns>Product number to display.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.AddOrderLines(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View,Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Invoice,System.String,Litium.Foundation.Security.SecurityToken)">
            <summary>
            Add the order lines by calling the AddSingleOrderLine web method in payEx api.
            </summary>
            <param name="paymentMethodView">Payment method view.</param>
            <param name="invoice">Invoice which contains order lines to be added.</param>
            <param name="orderRef">Order reference.</param>
            <param name="token">Security token.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.AddAddress(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.Address,System.String,Litium.Foundation.Security.SecurityToken)">
            <summary>
            Add the address to order using AddOrderAddress api call.
            </summary>
            <param name="address">Address to be added.</param>
            <param name="orderRef">Order reference.</param>
            <param name="token">Security token.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetPriceArgsList(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View,System.Int32)">
            <summary>
            Populate the price args list to be used in the Initialize method.
            </summary>
            <param name="paymentMethodView">Payment method.</param>
            <param name="amount">Amount in lowest moneytary unit.</param>
            <returns>Constructed price arg list</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetPrice(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View,System.Int32)">
            <summary>
            returns the price to be used in a method call.
            </summary>
            <param name="paymentMethodView">Payment method</param>
            <param name="amount">amount in lowest monetary unit</param>
            <returns>zero if not applicable, amount if applicable.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetCurrencyCode">
            <summary>
            Returns the currency used for the order.
            </summary>
            <returns>Currency used for order.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CaptureTransaction(Litium.Foundation.Security.SecurityToken)">
            <summary>
            Capture money from a reserved transaction.
            </summary>
            <param name="token">Security Token</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.Complete(Litium.Foundation.Security.SecurityToken)">
            <summary>
            Completes a transaction initiated by the Initialize method.
            </summary>
            <param name="token">Security token.</param>
            <returns>True if successfull false otherwise.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CompletePartialPayment(Litium.Foundation.Security.SecurityToken)">
            <summary>
            Completes a transaction initiated by the Initialize method.
            </summary>
            <param name="token">Security token.</param>
            <returns>True if successfull false otherwise.</returns>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.GetOrderDescription(Litium.Foundation.Modules.ECommerce.Orders.Order)">
            <summary>
            Returns a description about the order.
            </summary>
            <param name="order">Order.</param>
            <returns>Description string of the order.</returns>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CanReserveMoneyFromCustomerAccount">
            <summary>
            Can money be reserved from customer account.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CanChargeCustomerAccountDirectly">
            <summary>
            Can money be taken from customer account directly.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CanCompleteCurrentTransaction">
            <summary>
            Can complete the transaction.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CanCancelCurrentTransaction">
            <summary>
            Can cancel the current transaction.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CanReturnPayment">
            <summary>
            Can return payment to the customer.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.PaymentProviderArgsCreatorType">
            <summary>
            Gets the type of the payment provider args creator.
            </summary>
            <value>The type of the payment provider args creator.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.CanEditPayment">
            <summary>
            Whether the payment can be edited to change payment provider, etc.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PayExProvider.AdminPanel">
            <summary>
            Gets the payment administratoin panels path.
            </summary>
            <value>The payment administration panels path.</value>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings">
            <summary>
            Provides configuration information about the payex payment provider from configuration file
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.WEB_SERVICE_URL">
            <summary>
            Key for web service URL
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.MERCHANT_ACCOUNT">
            <summary>
            Key for merchant account
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.ENCRYPTION_KEY">
            <summary>
            Key for encryption key
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.CLIENT_IP_ADDRESS">
            <summary>
            Key for client IP address
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.INVOICE_DUE_AFTER_DAYS">
            <summary>
            Key fo Invoice due after days
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.IS_CREDIT_CARDS_ENABLED">
            <summary>
            Payment method Credit cards is enabled.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.IS_DIRECT_DEBIT_ENABLED">
            <summary>
            Payment method direct debit is enabled.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.IS_INVOICE_ENABLED">
            <summary>
            Payment method invoicing is enabled.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.PAYMENT_MODE">
            <summary>
            key for the default payment mode.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.USE_PAYEX_PART_PAYMENTS">
            <summary>
            Key for enable part returns.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.PAYMENT_PROVIDER_ARGS_CREATOR_TYPE">
            <summary>
            key for the PaymentProviderArgsCreatorType
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.#cctor">
            <summary>
            Initializes the <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings"/> class.
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.LoadConfiguration">
            <summary>
            Verifies the configuration.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.WebServiceURL">
            <summary>
            The web service URL for Payex
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.MerchantAccount">
            <summary>
            The account number we get at Payex, 
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.EncryptionKey">
            <summary>
            Encryption key provided by Payex
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.ClientIpAddress">
            <summary>
            IP address registered at Payex
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.InvoiceDueAfterDays">
            <summary>
            Invoice is due after number of days after invoice is placed.
            </summary>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.IsCreditCardsEnabled">
            <summary>
            Gets or sets a value indicating whether Credit Cards payment method is enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is credit cards enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.IsDirectDebitEnabled">
            <summary>
            Gets or sets a value indicating whether Direct Debit payment method is enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is direct debit enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.IsInvoiceEnabled">
            <summary>
            Gets or sets a value indicating whether invoice payment method is enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is invoice enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.DefaultPaymentMode">
            <summary>
            Gets the default payment mode.
            </summary>
            <value>The default payment mode.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.PaymentProviderArgsCreatorType">
            <summary>
            Gets type of the payment provider args creator.
            </summary>
            <value>The type of the payment provider args creator.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.MaxDescriptionLength">
            <summary>
            Gets or sets the length of the description.
            </summary>
            <value>The length of the description.</value>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.UsePayExPartPayments">
            <summary>
            Gets or sets a value indicating whether [part returns enabled].
            </summary>
            <value><c>true</c> if [part returns enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceArgList">
            <summary>
            provides a strongly typed collection for PriceArgList, used in pxOrder.Initialize6 method
            </summary>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceArgList.ToString">
            <summary>
            Provide the PriceArgList string, as required by the pxOrder.Initialize6 method
            </summary>
            <returns>PriceArgList formated as a valid input string to pxOrder.Initialize6</returns>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType">
            <summary>
            Defines valid price types for PayEx. 
            A price type is a specific payment method, such as master card, visa card, American Express card...
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.PX">
            <summary>
            PayEx
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.CPA">
            <summary>
            Norwegian or Swedish overcharged SMS
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.VISA">
            <summary>
            Visa card
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.MC">
            <summary>
            Master card
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.EUROCARD">
            <summary>
            EUROCARD
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.MAESTRO">
            <summary>
            MAESTRO
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.DINERS">
            <summary>
            Dinners
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.AMEX">
            <summary>
            American Express
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.JCB">
            <summary>
            JCB
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.FINAX">
            <summary>
            FINAX
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.DANKORT">
            <summary>
            Dankort
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.DD">
            <summary>
            direct debit/bank
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.IVR">
            <summary>
            Overcharged Call
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.EVC">
            <summary>
            Value Code
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.GC">
            <summary>
            Gift card / Generic card
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.INVOICE">
            <summary>
            payment by invoice
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.LOAN">
            <summary>
            Loan
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.NB">
            <summary>
            Direct debit from Nordea Bank
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType.NOT_DEFINED">
            <summary>
            Undefined price type.
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation">
            <summary>
            defines whether purchase is single phase or two phase. if two phase commit occurs later.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation.SALE">
            <summary>
            indicates that the order will be a 1-phased transaction. 
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PurchaseOperation.AUTHORIZATION">
            <summary>
            indicates that the order will be a 2-phased transaction if the payment method supports it. 
            For payment methods only supporting 1-phase transactions, this flag will be ignored
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode">
            <summary>
            Describes return codes returned by the Payex system
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.None">
            <summary>
            have zero converted as no return code
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.UndefinedReturnCode">
            <summary>
            return code was not defined by PayEx
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.OK">
            <summary>
            This indicates that no error has occurred, and the operation completed successfully.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.ValidationError_Generic">
            <summary>
            This indicates a generic/unspecified error processing the request. 
            The description field may or may not supply additional information
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.ValidationError_HashNotValid">
            <summary>
            This indicates that the supplied merchantAccountNumber or encryption key was incorrect, 
            or you are not properly generating the MD5 hash for the hash parameter
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.ValidationError_LoginFailed">
            <summary>
            This indicates that the supplied merchantAccountNumber or encryption key was incorrect.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.ValidationError_InvalidParameter">
            <summary>
            This indicates that one or more parameters supplied was incorrect. 
            The description field will indicate the first invalid field encountered
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.ValidationError_InvalidData">
            <summary>
            This indicates that even though basic verification of the parameters was successful, 
            one or more parameters was logically invalid (like i.e a non-existing reference to a user or order). 
            The description field will supply more detailed information
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.Error_NoRecordFound">
            <summary>
            This may be returned from PxOrder.Complete or PxOrder.Check if you request a non-existing transaction. 
            This may be returned even though you enter a valid orderRef when invoking PxOrder.Complete, 
            as even though you have created an order, the customer may not have successfully carried out the transaction
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.Merchant_InvalidIpAddress">
            <summary>
            This may be returned from any of the interfaces, 
            ex. PxOrder.Initialize or PxAgreement.CreateAgreement. 
            If you post a request without having registered your server's source IP address at first, 
            you'll get this error code. Please login into PayEx Admin og register it at Merchant Profile. 
            Make sure you update this information if your server gets a new IP address.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.Error_CaptureAmountIsLargerThanAuthAmount">
            <summary>
            You are attempting to capture an amount larger than the amount authorized. Try capturing an amount below or equal to the authorized amount
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.Error_Transaction_WrongStatus">
            <summary>
            The operation you are attempting to perform is not legal on the requested transaction due to its status.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.Error_CancelIsDone">
            <summary>
            Transaction already cancelled.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.Error_CreditAmountIsToLarge">
            <summary>
            The attempted credit amount is higher than the initial transaction, or a partial credit has already been performed
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.Error_FullCaptureDone">
            <summary>
            One or more captures which totals to the entire authorization amount has already been performed
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.Error_CaptureAmountNotEqualAuthAmount">
            <summary>
            Partial capture has been attempted towards a payment provider which only support full capture
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.Order_OrderProcessing">
            <summary>
            The user has not initialized the purchase yet.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.Subscription_CreationFailed_UnknownClient">
            <summary>
            Returned on PxSubscription.Add. Unable to find the client supplied in clientType/clientRef.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.CreditCard_Error">
            <summary>
            There has been an error with the credit card.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.PaymentDeclinedDoToUnspecifiedErr">
            <summary>
            The bank has declined charging the credit card, but does not return a logical description/error.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.CardDataError_UnsufientFounds">
            <summary>
            Error with card data.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.CancelledByClient">
            <summary>
            When the client press the cancel button in cardholders bank instead of authenticate the identity and the cancellation is returned by the financial institution then this will be returned.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.CardDataError_CardHolderName">
            <summary>
            All errors related to the Card Holder Name
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.CardDataError_CVCFormatErr">
            <summary>
            All errors related to the Card Verification Code
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.CardDataError_ExpDate">
            <summary>
            All errors related to the expiry date of the credit card.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.CardDataError_WrongCardNo">
            <summary>
            This error is returned when the credit card is expired or the number isn't valid or in use
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.CommunicationError">
            <summary>
            Since all payments involve communication towards several different financial institution non recoverable communication errors is expected.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.CreditCard_InvalidCardType">
            <summary>
            The credit card is an unsupported card brand
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.PaymentRefusedByFinancialInstitution">
            <summary>
            The payment is refused by the financial institution. If the refusal is because of financial reasons or technical reasons is not further explained. Financial reasons is a considered a private relationship between the client and the institution.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.PaymentRefusedNot3DSecureVerified">
            <summary>
            The Credit card did not support 3D Secure verification.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.PaymentRefusedNotASupportedCountry">
            <summary>
            The merchant do not support the country where the credit card is issued. Please contact support if supporting this specific country is desirable.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.FraudPatternDetected">
            <summary>
            Returned when the Wallit Fraud Center (WFC) detects purchase behaviors that have similarities with fraud patters.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.Credit_InvalidAmount">
            <summary>
            Amount was invalid.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.Credit_TransactionNotExists">
            <summary>
            Transaction does not exists.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.Initialize_InvalidData">
            <summary>
            Data sent to initialize is not valid.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.Check_OrderInProcess">
            <summary>
            Validation, check whether order is in Process.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ReturnCode.InvalidData">
            <summary>
            Data is not valid.
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.TransactionState">
            <summary>
            Defines transaction state in Payex system
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.TransactionState.Sale">
            <summary>
            This is a successful, one phased transaction.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.TransactionState.Initialize">
            <summary>
            We have initialized communication towards a third party payment provider 
            (like VISA), but no result has been received
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.TransactionState.Credit">
            <summary>
            This transaction has been credited.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.TransactionState.Authorize">
            <summary>
            This is a successful authorization(reservation), 
            which is the first step in a two phase transaction. 
            The transaction amount has been reserved from the customers account
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.TransactionState.Cancel">
            <summary>
            This is a cancelled authorization
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.TransactionState.Failure">
            <summary>
            This is a failed transaction. An example would be if we have attempted to perform a transaction 
            towards a third party payment provder (like VISA), but received a negative result.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.TransactionState.Capture">
            <summary>
            This is a successful capture, the second and last step of a two phased transaction.
            The customer has now been debited.
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.TransactionState.Undefined">
            <summary>
            transaction state received was not defined in payex documentation
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.TransactionState.None">
            <summary>
            transaction state recieved was null or empty
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View">
            <summary>
            PayEx payment method. this is the payment category, such as pay by credit card, pay by invoice.
            </summary>
            <remarks> the specific payment type is defined by <see cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PriceType"/></remarks>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View.PX">
            <summary>
            Payment by PayEx Account
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View.CC">
            <summary>
            Payment by Credit card
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View.DD">
            <summary>
            direct debit/bank
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View.PCSMS">
            <summary>
            TODO: documentation not found in PayEx mannual!!!
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View.CPA">
            <summary>
            Norwegian or Swedish overcharged SMS
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View.IVR">
            <summary>
            Payment by overcharged call
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View.EVC">
            <summary>
            Value Code
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View.INVOICE">
            <summary>
            Payment by invoice
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View.LOAN">
            <summary>
            payment by loan
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View.UNDEFINED">
            <summary>
            Payment category is undefined by Payex
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.View.NONE">
            <summary>
            No payment category specified
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ViewType">
            <summary>
            Differentiate between different payment pages in PayEx (re-direct model)
            </summary>
            <remarks>When calling webmethods in PayEx, which accept the <paramref cref="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ViewType"/> parameter, 
            you should use the <see cref="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.HelperMethods.ConvertFromViewType(Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ViewType)"/> method to cast parameter to an int.
            Do not directly cast this parameter into an int as <paramref cref="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ViewType.UseCss"/> should be converted to the <see cref="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.PluginSettings.MerchantAccount"/>
            </remarks>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ViewType.Ordinary">
            <summary>
            Ordinary Page
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ViewType.NewCreditCardPaymentView">
            <summary>
            new credit card payment view page
            </summary>
        </member>
        <member name="F:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.ViewType.UseCss">
            <summary>
            Use Css
            </summary>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.#ctor">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize7(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize7Async(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize7Async(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize3(System.Int64,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize3Async(System.Int64,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize3Async(System.Int64,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize4(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize4Async(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize4Async(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize5(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize5Async(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize5Async(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize6(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize6Async(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize6Async(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize(System.Int64,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.InitializeAsync(System.Int64,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.InitializeAsync(System.Int64,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize(System.Int64,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize1Async(System.Int64,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize1Async(System.Int64,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.InitializeBasic(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.InitializeBasicAsync(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.InitializeBasicAsync(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Complete(System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CompleteAsync(System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CompleteAsync(System.Int64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Check2(System.Int64,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Check2Async(System.Int64,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Check2Async(System.Int64,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Check(System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CheckAsync(System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CheckAsync(System.Int64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SalePX(System.Int64,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SalePXAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SalePXAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizePX(System.Int64,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizePXAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizePXAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PurchasePX(System.Int64,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PurchasePXAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PurchasePXAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PurchaseOTT(System.Int64,System.String,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PurchaseOTTAsync(System.Int64,System.String,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PurchaseOTTAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleCPA(System.Int64,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleCPAAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleCPAAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleCA(System.Int64,System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleCAAsync(System.Int64,System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleCAAsync(System.Int64,System.String,System.Int64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeCA(System.Int64,System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeCAAsync(System.Int64,System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeCAAsync(System.Int64,System.String,System.Int64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.ReserveIVR(System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.ReserveIVRAsync(System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.ReserveIVRAsync(System.Int64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleIVR(System.Int64,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleIVRAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleIVRAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Cancel2(System.Int64,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Cancel2Async(System.Int64,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Cancel2Async(System.Int64,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Cancel(System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CancelAsync(System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CancelAsync(System.Int64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Credit2(System.Int64,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Credit2Async(System.Int64,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Credit2Async(System.Int64,System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Credit(System.Int64,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CreditAsync(System.Int64,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CreditAsync(System.Int64,System.String,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CreditOrderLine2(System.Int64,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CreditOrderLine2Async(System.Int64,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CreditOrderLine2Async(System.Int64,System.Int32,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CreditOrderLine(System.Int64,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CreditOrderLineAsync(System.Int64,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CreditOrderLineAsync(System.Int64,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Capture(System.Int64,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CaptureAsync(System.Int64,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CaptureAsync(System.Int64,System.String,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Capture2(System.Int64,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Capture2Async(System.Int64,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Capture2Async(System.Int64,System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleEVC(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleEVCAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleEVCAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeEVC(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeEVCAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeEVCAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddSingleOrderLine(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddSingleOrderLineAsync(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddSingleOrderLineAsync(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddMultipleOrderLines(System.Int64,System.String,System.Int32,System.String[][],System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddMultipleOrderLinesAsync(System.Int64,System.String,System.Int32,System.String[][],System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddMultipleOrderLinesAsync(System.Int64,System.String,System.Int32,System.String[][],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PrepareSaleDD(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PrepareSaleDDAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PrepareSaleDDAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PrepareSaleDD2(System.Int64,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PrepareSaleDD2Async(System.Int64,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PrepareSaleDD2Async(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PrepareAuthorizeDD(System.Int64,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PrepareAuthorizeDDAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PrepareAuthorizeDDAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleInvoice(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleInvoiceAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleInvoiceAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleInvoice2(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleInvoice2Async(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleInvoice2Async(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleInvoiceLedger(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleInvoiceLedgerAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleInvoiceLedgerAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddLoan(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddLoanAsync(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddLoanAsync(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CalculateLoan(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CalculateLoanAsync(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CalculateLoanAsync(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleLoan(System.Int64,System.String,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleLoanAsync(System.Int64,System.String,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleLoanAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeLoan(System.Int64,System.String,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeLoanAsync(System.Int64,System.String,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeLoanAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddOrderAddress(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddOrderAddressAsync(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddOrderAddressAsync(System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeGC(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeGCAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeGCAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleGC(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleGCAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleGCAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.GetTransactionDetails2(System.Int64,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.GetTransactionDetails2Async(System.Int64,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.GetTransactionDetails2Async(System.Int64,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.GetTransactionDetails(System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.GetTransactionDetailsAsync(System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.GetTransactionDetailsAsync(System.Int64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.TransactionCheck(System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.TransactionCheckAsync(System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.TransactionCheckAsync(System.Int64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.TransactionCheck2(System.Int64,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.TransactionCheck2Async(System.Int64,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.TransactionCheck2Async(System.Int64,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeInvoice(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeInvoiceAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeInvoiceAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeInvoiceLedger(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeInvoiceLedgerAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeInvoiceLedgerAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CancelAsync1(System.Object)">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize7Completed">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize3Completed">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize4Completed">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize5Completed">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize6Completed">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.InitializeCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Initialize1Completed">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.InitializeBasicCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CompleteCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Check2Completed">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CheckCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SalePXCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizePXCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PurchasePXCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PurchaseOTTCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleCPACompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleCACompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeCACompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.ReserveIVRCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleIVRCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Cancel2Completed">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CancelCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Credit2Completed">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CreditCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CreditOrderLine2Completed">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CreditOrderLineCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CaptureCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.Capture2Completed">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleEVCCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeEVCCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddSingleOrderLineCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddMultipleOrderLinesCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PrepareSaleDDCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PrepareSaleDD2Completed">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.PrepareAuthorizeDDCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleInvoiceCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleInvoice2Completed">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleInvoiceLedgerCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddLoanCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.CalculateLoanCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleLoanCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeLoanCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AddOrderAddressCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeGCCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.SaleGCCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.GetTransactionDetails2Completed">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.GetTransactionDetailsCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.TransactionCheckCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.TransactionCheck2Completed">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeInvoiceCompleted">
            <remarks/>
        </member>
        <member name="E:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PxOrder.AuthorizeInvoiceLedgerCompleted">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize7CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize7CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize7CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize3CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize3CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize3CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize4CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize4CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize4CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize5CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize5CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize5CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize6CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize6CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize6CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.InitializeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.InitializeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.InitializeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize1CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize1CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Initialize1CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.InitializeBasicCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.InitializeBasicCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.InitializeBasicCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CompleteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CompleteCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CompleteCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Check2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Check2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Check2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CheckCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CheckCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CheckCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SalePXCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SalePXCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SalePXCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizePXCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizePXCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizePXCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PurchasePXCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PurchasePXCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PurchasePXCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PurchaseOTTCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PurchaseOTTCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PurchaseOTTCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleCPACompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleCPACompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleCPACompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleCACompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleCACompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleCACompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeCACompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeCACompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeCACompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.ReserveIVRCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.ReserveIVRCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.ReserveIVRCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleIVRCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleIVRCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleIVRCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Cancel2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Cancel2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Cancel2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CancelCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CancelCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CancelCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Credit2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Credit2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Credit2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CreditCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CreditCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CreditCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CreditOrderLine2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CreditOrderLine2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CreditOrderLine2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CreditOrderLineCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CreditOrderLineCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CreditOrderLineCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CaptureCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CaptureCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CaptureCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Capture2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Capture2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.Capture2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleEVCCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleEVCCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleEVCCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeEVCCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeEVCCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeEVCCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AddSingleOrderLineCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AddSingleOrderLineCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AddSingleOrderLineCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AddMultipleOrderLinesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AddMultipleOrderLinesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AddMultipleOrderLinesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PrepareSaleDDCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PrepareSaleDDCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PrepareSaleDDCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PrepareSaleDD2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PrepareSaleDD2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PrepareSaleDD2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PrepareAuthorizeDDCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PrepareAuthorizeDDCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.PrepareAuthorizeDDCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleInvoiceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleInvoiceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleInvoiceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleInvoice2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleInvoice2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleInvoice2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleInvoiceLedgerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleInvoiceLedgerCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleInvoiceLedgerCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AddLoanCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AddLoanCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AddLoanCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CalculateLoanCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CalculateLoanCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.CalculateLoanCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleLoanCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleLoanCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleLoanCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeLoanCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeLoanCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeLoanCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AddOrderAddressCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AddOrderAddressCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AddOrderAddressCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeGCCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeGCCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeGCCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleGCCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleGCCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.SaleGCCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.GetTransactionDetails2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.GetTransactionDetails2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.GetTransactionDetails2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.GetTransactionDetailsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.GetTransactionDetailsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.GetTransactionDetailsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.TransactionCheckCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.TransactionCheckCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.TransactionCheckCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.TransactionCheck2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.TransactionCheck2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.TransactionCheck2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeInvoiceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeInvoiceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeInvoiceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeInvoiceLedgerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeInvoiceLedgerCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Litium.Studio.Plugins.ECommerce.PaymentProviders.PayEx.com.payex.AuthorizeInvoiceLedgerCompletedEventArgs.Result">
            <remarks/>
        </member>
    </members>
</doc>
